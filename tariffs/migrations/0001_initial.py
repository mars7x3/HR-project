# Generated by Django 4.1 on 2022-12-12 21:12

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('resume', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PriceList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Название тарифа')),
            ],
            options={
                'verbose_name': 'Прайс лист',
                'verbose_name_plural': 'Прайс лист',
            },
        ),
        migrations.CreateModel(
            name='UserTariffFunction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact_amount', models.IntegerField(default=0, verbose_name='Доступ к резюме поштучно')),
                ('contact_amount_dead_time', models.DateTimeField(blank=True, null=True, verbose_name='Время доступ к резюме поштучно')),
                ('contact_rubric', models.BooleanField(default=False, verbose_name='Доступ к резюме в рубрике')),
                ('contact_rubric_dead_time', models.DateTimeField(blank=True, null=True, verbose_name='Время доступ к резюме в рубрике')),
                ('banner', models.BooleanField(blank=True, null=True, verbose_name='Банер')),
                ('banner_is_active', models.BooleanField(default=False)),
                ('banner_moderation', models.BooleanField(default=False, verbose_name='Модерация банера')),
                ('banner_tariff_title', models.CharField(blank=True, max_length=300, null=True)),
                ('banner_link', models.CharField(blank=True, max_length=300, null=True, verbose_name='URL банера')),
                ('banner_image', models.FileField(blank=True, null=True, upload_to='banner', verbose_name='Фото Банера')),
                ('banner_dead_time', models.DateTimeField(blank=True, null=True, verbose_name='Время Банера')),
                ('employer', models.BooleanField(default=False, verbose_name='Ведущие компании')),
                ('employer_is_active', models.BooleanField(default=False)),
                ('employer_moderation', models.BooleanField(default=False, verbose_name=' Модерация ведущие компании')),
                ('employer_tariff_title', models.CharField(blank=True, max_length=300, null=True)),
                ('employer_title', models.CharField(blank=True, max_length=200, null=True, verbose_name='Название Ведущие компании')),
                ('employer_link', models.CharField(blank=True, max_length=200, null=True, verbose_name='Ссылка Ведущие компании')),
                ('employer_image', models.ImageField(blank=True, null=True, upload_to='banner', verbose_name='Лого Ведущие компании')),
                ('employer_dead_time', models.DateTimeField(blank=True, null=True, verbose_name='Время Ведущие компании')),
                ('vip_vacancy_count_rubrics', models.IntegerField(default=0)),
                ('vip_vacancy_count_all_rubrics', models.IntegerField(default=0)),
                ('vip_vacancy_deed_time', models.DateTimeField(blank=True, null=True)),
                ('banner_rubric_list', models.ManyToManyField(blank=True, related_name='user_tariff_functions_banner', to='resume.specialization', verbose_name='Рубрика для банера')),
                ('contact_rubric_list', models.ManyToManyField(blank=True, related_name='user_tariff_functions', to='resume.specialization', verbose_name='Рубрика для резюме')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user_tariff_function', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Подключенные тарифы',
                'verbose_name_plural': 'Подключенные тарифы',
            },
        ),
        migrations.CreateModel(
            name='Tariff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('price_list', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tariffs', to='tariffs.pricelist')),
            ],
        ),
        migrations.CreateModel(
            name='MyTariff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tariff', models.CharField(max_length=500)),
                ('price', models.DecimalField(decimal_places=2, max_digits=15)),
                ('dead_time', models.DateTimeField(blank=True, null=True)),
                ('is_terms', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='my_tariffs', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DayAndPrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.IntegerField(blank=True, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('pbp_price', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('tariff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='day_and_price', to='tariffs.tariff')),
            ],
        ),
        migrations.CreateModel(
            name='AccessToResume',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resume', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='access_to_resumes', to='resume.resume')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='access_to_resumes', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
